#!/usr/bin/python3.6
import json
import os
import sys

from argparse import ArgumentParser

from abyss_deep_learning.datasets.coco import CocoDataset


def main():
    args = get_args()
    json_string = ''
    dataset = {
        'images': [],
        'annotations': []
    }

    if not sys.stdin.isatty():
        for line in sys.stdin:
            stripped_line = line.strip()
            if os.path.exists(stripped_line):
                args.json_files.append(stripped_line)
            else:
                json_string += stripped_line

    if json_string:
        args.json_files.append(json_string)

    for json_file in args.json_files:
        coco_ds = CocoDataset(json_file)
        dataset = filter_captions(dataset, coco_ds.coco.dataset)

    json.dump(dataset, sys.stdout, indent=4)


def filter_captions(dataset, json_data):
    captions = get_args().captions.split(',')
    img_ids = set()
    for ann in json_data['annotations']:
        if ann['caption'] in captions:
            dataset['annotations'].append(ann)
            img_ids.add(ann['image_id'])
    for img in json_data['images']:
        if img['id'] in img_ids:
            dataset['images'].append(img)
    return dataset


def get_args():
    parser = ArgumentParser(description="Filter out extraneous captions associated with images in a given json file")
    parser.add_argument('json_files', nargs='*', type=str, help="JSON files to caption count")
    parser.add_argument('-c', '--captions', type=str, help="Captions to keep for each image annotations. Can be a "
                                                           "single caption or multiple captions that are comma "
                                                           "separated")
    return parser.parse_args()


if __name__ == '__main__':
    main()
