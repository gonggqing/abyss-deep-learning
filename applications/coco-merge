#!/usr/bin/env python3
import argparse
import os
import sys
from contextlib import redirect_stdout

from pycocotools.coco import COCO

from abyss_deep_learning.coco_classes import CocoDataset

description = \
    """
    
    Read coco.json file(s) defined on command line or from a list of json files on stdin.
    Output a merged coco.json file in the current directory
    
    examples
        coco-merge labelled/abc/coco.json labelled/def/coco.json
        find . -name coco.json | coco-from-video
    
    """


def main(args):
    with redirect_stdout(sys.stderr):
        coco_list = []
        for coco_path in args.input:
            coco_dir = os.path.dirname(coco_path)
            coco_name = '.'.join(os.path.basename(coco_path).split('.')[0:-1])
            if args.verbose:
                print("loading {:s}".format(coco_path), file=sys.stderr)
            if not os.path.exists(coco_path):
                raise Exception("No such COCO json exists")
            coco_list.append(CocoDataset.from_COCO(
                COCO(coco_path), image_dir=args.image_dir))
    print("Loaded {:d} COCO datasets".format(len(coco_list)), file=sys.stderr)
    result = coco_list[0]
    for coco_dataset in coco_list[1:]:
        result += coco_dataset
    print(result)


def get_args():
    """Get args from the command line args"""
    parser = argparse.ArgumentParser(description=description, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument("coco_jsons", nargs='+', type=str, help="Path to coco.json files")
    parser.add_argument("--output-dir", "--output", "-o", type=str,
                        help="Output directory path for merged coco json files", default=os.getcwd())
    return parser.parse_args()


if __name__ == '__main__':
    main(get_args())
