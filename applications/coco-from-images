#!/usr/bin/env python3
__author__ = 'Kent Hu'
__maintainer__ = 'Kent Hu'

import argparse
import json
import os
import sys
from datetime import datetime

from PIL import Image

_DESCRIPTION = """
The utility takes in a text file of paths to images to generate a COCO JSON file from.

examples
    cat images.txt | coco-from-images > images.json
    ls "$(pwd)"/*.jpg | coco-from-images > images.json
    coco-from-images < images.txt > images.json
    coco-from-images < <(ls "$(pwd)"/*.jpg) > images.json
"""


def main(args):
    
    image_paths = sys.stdin.read().strip().split('\n')

    coco_json = {
        'images'     : [],
        'annotations': [],
        'categories' : []
    }

    force = False

    if args.image_size is not None:
        force = True
        width, height = args.image_size.split(',')

    for i, image_path in enumerate(image_paths):
        if not force:
            try:
                width, height = Image.open(image_path).size
            except OSError:
                print("coco-from-images: ERROR image read error '{}' - use --image_size to override".format(image_path),
                      file=sys.stderr)
                sys.exit(1)

        coco_json['images'].append(
             {
                'id'       : i,
                'file_name': os.path.basename(image_path),
                'path'     : image_path,
                'width'    : width,
                'height'   : height,
            }
        )

    json.dump(coco_json, sys.stdout, indent=args.indent)
    sys.exit(0)


def get_args():

    parser = argparse.ArgumentParser(description=_DESCRIPTION, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('--image-size', type=str,
                        help="<width>,<height> run without checking images, sets specified width,height")
    parser.add_argument('--indent', type=int, help="json indent, if none, output minimised json default: %(default)s",
                        default=4)
    return parser.parse_args()


if __name__ == '__main__':
    main(get_args())
