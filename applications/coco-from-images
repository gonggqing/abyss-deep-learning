#!/usr/bin/env python3
__author__ = 'Kent Hu'
__maintainer__ = 'Kent Hu'

import argparse
import json
import sys
from abyss_deep_learning.coco_tools import coco_from_images


_DESCRIPTION = """
The utility takes in a text file of paths to images to generate a COCO JSON file from.

examples
    cat images.txt | coco-from-images > images.json
    ls "$(pwd)"/*.jpg | coco-from-images > images.json
    coco-from-images < images.txt > images.json
    coco-from-images < <(ls "$(pwd)"/*.jpg) > images.json
"""


def main(args):
    
    image_paths = sys.stdin.read().strip().split('\n')

    width = None
    height = None

    if args.image_size is not None:
        width, height = args.image_size.split(',')

    coco_json = coco_from_images(image_paths, width, height)

    json.dump(coco_json, sys.stdout, indent=args.indent)
    sys.exit(0)


def get_args():

    parser = argparse.ArgumentParser(description=_DESCRIPTION, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('--image-size', type=str,
                        help="<width>,<height> run without checking images, sets specified width,height")
    parser.add_argument('--indent', type=int, help="json indent, if none, output minimised json default: %(default)s",
                        default=4)
    return parser.parse_args()


if __name__ == '__main__':
    main(get_args())
