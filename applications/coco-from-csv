#!/usr/bin/env python3
import os
import argparse
import json
import sys
from io import StringIO

import pandas as pd

SCRIPT_NAME = os.path.basename(__file__)

DESCRIPTION = \
    """

"""


def main():
    args = get_args()

    json_data = {
        'file_name': args.file_name,
        'segments': [],
    }

    stdin_string = ""
    if not sys.stdin.isatty():
        for line in sys.stdin:
            stdin_string += line

    if stdin_string:
        csv = StringIO(stdin_string)
    else:
        csv = args.csv

    if not csv:
        raise IOError("No CSV file given")

    df = pd.read_csv(csv)
    for idx, row in df.iterrows():
        if 'file_name' in row:
            json_data['file_name'] = row['file_name']
        elif args.file_name is None:
            raise RuntimeError("No file name can be found in CSV file and --file-name is not specified")
        json_data['segments'].append({
            'id': idx,
            'begin_frame': row['begin_frame'],
            'end_frame': row['end_frame'],
            'caption': row['caption'],
        })

    json.dump(json_data, sys.stdout, indent=4)
    say("done")
    sys.exit()


def get_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('-c', '--csv', type=str, help="Path to CSV file.")
    parser.add_argument('-f', '--file-name', type=str, help="Path to file.")
    return parser.parse_args()


def say(*args, **kwargs):
    print("{}:".format(SCRIPT_NAME), *args, file=sys.stderr, **kwargs)


if __name__ == '__main__':
    main()
