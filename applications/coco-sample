#!/usr/bin/env python3
from __future__ import print_function

import argparse
import json
import random
import sys

from abyss_deep_learning.datasets.coco import CocoDataset

DESCRIPTION = \
"""
Randomly sample data from coco json file passed as command line arguments or piped in from another coco utility.

Output coco json contents in stdout.

examples:
    coco-sample coco.a.json coco.b.json
    find . -name coco.json | coco-merge
"""


def main(args):
    json_string = ""
    if not sys.stdin.isatty():
        for line in sys.stdin:
            json_string += line.strip()

    if json_string:
        args.json_file.append(json_string)

    data_set = {
        'images': [],
        'annotations': [],
    }

    for file in args.json_file:
        coco_ds = CocoDataset(file)

        if args.num_imgs <= len(coco_ds.coco.imgs):
            sample = random.sample(list(coco_ds.coco.imgs), args.num_imgs)
        else:
            raise RuntimeError("Number of images to be sampled [{}] is greater than number of images in the data set "
                               "[{}] ".format(args.num_imgs, len(coco_ds.coco.imgs)))

        data_set['images'] += [img for img in coco_ds.coco.loadImgs(sample)]
        img_ids = [img['id'] for img in data_set['images']]

        ann_ids = coco_ds.coco.getAnnIds(imgIds=img_ids)
        data_set['annotations'] += coco_ds.coco.loadAnns(ids=ann_ids)

    json.dump(data_set, sys.stdout, indent=4)

    sys.exit(0)


def get_args():
    parser = argparse.ArgumentParser(
        description="Split a COCO JSON database into multiple."
    )
    parser.add_argument('json_file', nargs='*', type=str, help='JSON file to sample from')
    parser.add_argument('num_imgs', type=int, help="Number of images to randomly sample")
    return parser.parse_args()


if __name__ == '__main__':
    main(get_args())
