#!/usr/bin/env python3
from __future__ import print_function

import argparse
import json
import random
import sys

from abyss_deep_learning.datasets.coco import CocoDataset

"""

usage: coco-grep my.json "RI" 

"""


def main(args):

    # TODO: what are edge cases for this function isatty()?
    if not sys.stdin.isatty():
        for line in sys.stdin:
            args.json_files.append(line.strip())

    for json_file in args.json_files:
        ds = CocoDataset(json_file)
        new_ds = CocoDataset(json_file)

        # TODO: Use case when args.num_imgs is greater than number of images in dataset
        sample = random.sample(list(ds.coco.imgs), args.num_imgs)
        new_ds.coco.imgs = {img['id']: img for img in ds.coco.loadImgs(sample)}

        # TODO: Fix up code, pretty hacky doesn't make much sense
        im_ids = new_ds.coco.getImgIds()
        ann_ids = ds.coco.getAnnIds(imgIds=im_ids)

        new_ds.coco.anns = ds.coco.loadAnns(ids=ann_ids)

        dataset = {
            'images': list(new_ds.coco.imgs.values()),
            'annotations': new_ds.coco.anns,
        }

        with (sys.stdout) as outfile:
            json.dump(dataset, outfile, indent=4)

    sys.exit(0)


def get_args():
    parser = argparse.ArgumentParser(
        description="Split a COCO JSON database into multiple."
    )
    parser.add_argument('json_files', nargs='+',type=str,help='JSON file to grep from')
    parser.add_argument('num_imgs', type=int, help="todo")

    args = parser.parse_args()
    return args


if __name__ == '__main__':
    main(get_args())
